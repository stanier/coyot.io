toastr.options.newestOnTop=!1,toastr.options.progressBar=!1,toastr.options.positionClass="toast-bottom-right",$.material.init(),$.material.ripples(),$.material.input(),$.material.checkbox(),$.material.radio();var app=angular.module("coyot.io",["ngRoute","ngAnimate"]);app.config(["$routeProvider","$locationProvider",function(e,r){e.when("/cluster/manage",{templateUrl:"pages/cluster/manage",controller:"ClusterCtlr"}).when("/management/dashboard",{templateUrl:"pages/management/dashboard",controller:"ManagementCtlr"}).when("/management/users",{templateUrl:"pages/management/users",controller:"ManagementCtlr"}).when("/server/:hostname/overview",{templateUrl:"pages/server/overview",controller:"ServerCtlr",reloadOnSearch:!1}).when("/server/:hostname/packages/install",{templateUrl:"pages/server/packages/install",controller:"ServerCtlr",reloadOnSearch:!1}).when("/server/:hostname/packages/update",{templateUrl:"pages/server/packages/update",controller:"ServerCtlr",reloadOnSearch:!1}).when("/server/:hostname/packages",{templateUrl:"pages/server/packages",controller:"ServerCtlr",reloadOnSearch:!1}).when("/server/:hostname/package/:pkg/",{templateUrl:"pages/server/packages/view",controller:"ServerCtlr",reloadOnSearch:!1}).when("/server/:hostname/services",{templateUrl:"pages/server/services",controller:"ServerCtlr",reloadOnSearch:!1}).when("/server/:hostname/service/:service/",{templateUrl:"pages/server/services/view",controller:"ServerCtlr",reloadOnSearch:!1}).when("/server/:hostname/processes",{templateUrl:"pages/server/processes",controller:"ServerCtlr",reloadOnSearch:!1}).when("/server/:hostname/process/:process",{templateUrl:"pages/server/processes/view",controller:"ServerCtlr",reloadOnSearch:!1}),r.html5Mode(!0)}]),app.controller("ClusterCtlr",["$scope","$http",function(e,r){e.getServers=function(){r.get("/api/cluster/servers").success(function(r,t,s,n){e.servers=[];for(var a=0;a<r.length;a++)e.servers[a]={hostname:r[a].hostname,host:r[a].host,port:r[a].port,isWorker:"hybrid"===r[a].type||"worker"===r[a].type,isWeb:"hybrid"===r[a].type||"web"===r[a].type},e.getStats(a)}).error(function(e,r,t,s){console.log(e)})},e.getStats=function(t){r.get("//"+e.servers[t].host+":"+e.servers[t].port+"/api/system/stats?type=simple").success(function(r,s,n,a){e.servers[t].online=r.online,e.servers[t].freemem=r.freemem}).error(function(e,r,t,s){console.log(e)})}}]),app.controller("GeneralCtlr",["$scope","$location",function(e,r){e.global={},e.$on("serverConnection",function(r,t){e.global.server=t}),e.path={equals:function(e){return e==r.path()},startsWith:function(e){return r.path().startsWith(e)}}}]),app.controller("ManagementCtlr",["$scope","$http",function(e,r){e.pageSize=20,e.currentPage=0,e.getUsers=function(){r.get("/api/management/users").success(function(r,t,s,n){e.users=r,e.$apply()}).error(function(r,t,s,n){e.users=r,e.$apply()})}}]),app.controller("ServerCtlr",["$scope","$http","$routeParams","$location",function(e,r,t,s){function n(){e.global.server||r.get("/api/server/"+t.hostname+"/").success(function(r,t,s,n){e.$emit("serverConnection",r)}).error(function(e,r,t,s){console.log(e)})}e.pageSize=20,e.currentPage=0,e.terminalResponse="",e.serviceStatus=[];var a=io("http://"+host+":"+port);e.getStats=function(){n(function(){r.get("//"+data.host+":"+data.port+"/api/system/stats?type=all").success(function(r,t,s,n){e.server=r,e.server.uptime=new Date(1e3*r.uptime),e.loadAvg()}).error(function(e,r,t,s){console.log(e)})})},e.getPlatformClass=function(e){return"linux"==e?"fa fa-linux":"windows"==e?"fa fa-windows":"apple"==e?"fa fa-wheelchair":void 0},e.loadAvg=function(){var r=["-webkit-transform","-ms-transform"];for(var t in e.global.server.loadavg){var s=Math.floor(e.global.server.loadavg[t]/e.global.server.cpu.length*180),n=2*s;for(var a in r)$("#circle-"+t+" .fill, #circle-"+t+" .mask.full").css(r[a],"rotate("+s+"deg)"),$("#circle-"+t+" .fill.fix").css(r[a],"rotate("+n+"deg)")}},e.getPkgs=function(){r.get("//"+e.global.server.host+":"+e.global.server.port+"/api/worker/packages/list").success(function(r,t,s,n){e.pkgs=r}).error(function(r,t,s,n){e.pkgs=r})},e.getPkgManagers=function(){},e.getPkgInfo=function(t){r.get("//"+e.global.server.host+":"+e.global.server.port+"/api/worker/packages/getInfo/"+t).success(function(r,t,s,n){e.pkg=r}).error(function(r,t,s,n){e.pkg=r})},e.installPkg=function(){a.emit("install package",{manager:e.pkgMngr,pkg:e.pkgInstallQuery})},e.updatePkg=function(){a.emit("update package",{manager:e.pkgMngr,pkg:e.pkgUpdateQuery})},e.getServiceStatus=function(e){a.emit("get service status",e)},e.getServiceInfo=function(t){r.get("//"+e.global.server.host+":"+e.global.server.port+"/api/worker/services/getInfo/"+t).success(function(r,t,s,n){e.service=r,e.$apply()}).error(function(r,t,s,n){e.service=r,e.$apply()})},e.getRunningServices=function(){a.emit("get status all")},e.startService=function(e){toastr.info("Starting service "+e+"..."),a.emit("start service",e)},e.stopService=function(e){toastr.info("Stopping service "+e+"..."),a.emit("stop service",e)},e.restartService=function(e){toastr.info("Restarting service "+e+"..."),a.emit("restart service",e)},e.sendInput=function(){e.terminalResponse+="\n",a.emit("input",{input:e.terminalInput}),e.terminalInput=""}}]),app.filter("bytes",function(){return function(e,r){if(isNaN(parseFloat(e))||!isFinite(e))return"-";"undefined"==typeof r&&(r=1);var t=["bytes","KB","MB","GB","TB","PB"],s=Math.floor(Math.log(e)/Math.log(1024));return(e/Math.pow(1024,Math.floor(s))).toFixed(r)+" "+t[s]}}),app.filter("offsetBy",function(){return function(e,r){return r=+r,e.slice(r)}});
//# sourceMappingURL=data:application/json;base64,