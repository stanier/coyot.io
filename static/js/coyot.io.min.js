var app=angular.module("coyot.io",[]);app.controller("ClusterManagementCtlr",["$scope","$http",function(e,t){t.get("/cluster/list").success(function(r,n,o,s){function i(r){t.get("//"+e.servers[r].host+":"+e.servers[r].port+"/system/stats?type=simple").success(function(t,n,o,s){e.servers[r].online=t.online,e.servers[r].freemem=t.freemem}).error(function(e,t,r,n){console.log(e)})}e.servers=[];for(var a=0;a<r.length;a++)e.servers[a]={hostname:r[a].hostname,host:r[a].host,port:r[a].port,isWorker:"hybrid"===r[a].type||"worker"===r[a].type,isWeb:"hybrid"===r[a].type||"web"===r[a].type},i(a)}).error(function(e,t,r,n){console.log(e)})}]),app.controller("ServerManagementCtlr",["$scope","$http",function(e,t){e.pageSize=20,e.currentPage=0,e.terminalResponse="",e.serviceStatus=[];var r=io("http://"+host+":"+port);e.getStats=function(){t.get("//"+host+":"+port+"/system/stats?type=all").success(function(t,r,n,o){e.server=t,e.server.uptime=new Date(1e3*t.uptime),e.loadAvg()}).error(function(e,t,r,n){console.log(e)})},e.getPlatformClass=function(e){return"linux"==e?"fa fa-linux":"windows"==e?"fa fa-windows":"apple"==e?"fa fa-wheelchair":void 0},e.loadAvg=function(){var t=["-webkit-transform","-ms-transform"];for(var r in e.server.loadavg){var n=Math.floor(e.server.loadavg[r]/e.server.cpu.length*180),o=2*n;for(var s in t)$("#circle-"+r+" .fill, #circle-"+r+" .mask.full").css(t[s],"rotate("+n+"deg)"),$("#circle-"+r+" .fill.fix").css(t[s],"rotate("+o+"deg)")}},e.getPkgs=function(){t.get("//"+host+":"+port+"/worker/packages/list").success(function(t,r,n,o){e.pkgs=t}).error(function(t,r,n,o){e.pkgs=t})},e.getPkgManagers=function(){t.get("//"+host+":"+port+"/worker/packages/listManagers").success(function(t,r,n,o){e.managers=t}).error(function(t,r,n,o){e.managers=t})},e.getPkgInfo=function(r){t.get("//"+host+":"+port+"/worker/packages/getInfo/"+r).success(function(t,r,n,o){e.pkg=t}).error(function(t,r,n,o){e.pkg=t})},e.installPkg=function(){r.emit("install package",{manager:e.pkgMngr,pkg:e.pkgInstallQuery})},e.updatePkg=function(){r.emit("update package",{manager:e.pkgMngr,pkg:e.pkgUpdateQuery})},e.getServices=function(){t.get("//"+host+":"+port+"/worker/services/list").success(function(t,r,n,o){e.services=t}).error(function(t,r,n,o){e.services=t})},e.getServiceInfo=function(r){t.get("//"+host+":"+port+"/worker/services/getInfo/"+r).success(function(t,r,n,o){e.service=t}).error(function(t,r,n,o){e.service=t})},e.getRunningServices=function(){r.emit("status all")},r.on("stdout",function(t){e.terminalResponse+=t,console.log("STDOUT:  "+t),e.$apply()}),r.on("stderr",function(t){e.terminalResponse+=t,console.log("STDERR:  "+t),e.$apply()}),r.on("error",function(t){console.log("ERROR:  "+t),e.$apply()}),r.on("service status",function(t,r){e.serviceStatus.push({service:t,isRunning:r}),e.$apply()}),e.sendInput=function(){e.terminalResponse+="\n",r.emit("input",{input:e.terminalInput}),e.terminalInput=""}}]),app.filter("bytes",function(){return function(e,t){if(isNaN(parseFloat(e))||!isFinite(e))return"-";"undefined"==typeof t&&(t=1);var r=["bytes","KB","MB","GB","TB","PB"],n=Math.floor(Math.log(e)/Math.log(1024));return(e/Math.pow(1024,Math.floor(n))).toFixed(t)+" "+r[n]}}),app.filter("offsetBy",function(){return function(e,t){return t=+t,e.slice(t)}});